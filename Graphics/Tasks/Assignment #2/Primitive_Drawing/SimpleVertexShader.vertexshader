#version 120

// Input vertex data, different for all executions of this shader.
//refers to the buffer we use to feed the vertexPosition_modelspace attribute. 
//Each vertex can have numerous attributes : A position, one or several colours, one or several texture coordinates, lots of other things. 
// OpenGL doesn’t know what a colour is : it just sees a vec3. So we have to tell him which buffer corresponds to which input. 
//We do that by setting the layout to the same value as the first parameter to glVertexAttribPointer. 


// Input vertex data, different for all executions of this shader.
attribute vec3 vertexPosition_modelspace; //vertexPosition_modelspace: could be anything else. It will contain the position of the vertex for each run of the vertex shader.

void main(){

	//gl_Position is one of the few built-in variables : you have to assign some value to it. 
	//Everything else is optional; we’ll see what “everything else” means later.

	gl_Position = vec4(vertexPosition_modelspace, 1.0); //we will know the 4th coordinates in the next lab (math introduction)

}

